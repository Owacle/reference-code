//arctracker version 1.0.8 For Maya 2011+
//Arctracker 1.0.8 For Maya 2011+
//Written by Spencer Jones - mail@spence-animator.co.uk - www.spence-animator.co.uk - 03/07/09 - Please keep my credit here :D
//To use place script (arctracker108.mel) in scripts folder & run the command - arctracker108;

global proc arctracker108 (){
	if(`window -ex atuserwin`==0)
	{
		float $startanim = `playbackOptions -q -min`;
		float $endanim = `playbackOptions -q -max`;
		float $defaulttrackscale = 0.25;
		float $butw = 250;
		float $buth = 30;
		float $uispace = 2;
		window -t "ArcTracker 1.0.8 2011+" -rtf 1 -ret atuserwin;
			columnLayout -co "both" $uispace -rs $uispace;
			columnLayout;
					
						//Add Objects Buttons
						rowColumnLayout -nc 2 -cw 1 200 -cw 2 50;
							button -l "Add Objects" -c "ataddtolist";
							button -l "Remove" -c "atremovefromlist";
						setParent..;
						
						//Object List
						textScrollList -bgc 0.16 0.16 0.16 -w $butw -nr 5 -ams 0 -sc "atswitch" atuserlist;
						
						//Create Trails Buttons
						rowColumnLayout -nc 2 -cw 1 200 -cw 2 50;
							button -l "Create / Recreate Trail" -c "createatpathtracks";
							button -l "Remove" -c "removeatpathtracks";
						setParent..;
						
						//Zoom CTL
						frameLayout -cl 1 -cll 1 -w $butw -fn "plainLabelFont" -mh 5 -l "Zoom [ Active Camera ]" -bs "etchedOut";
							columnLayout -w $butw;
							rowColumnLayout -nc 3 -cw 1 80 -cw 2 80 -cw 3 80;
    							button -l "+" -c "floatSliderGrp -e -v (`floatSliderGrp -q -v atuserzoom`-0.01) atuserzoom;atzoom;";
    							button -l "^" -c "floatSliderGrp -e -v (`floatSliderGrp -q -v atuserzoomv`+0.01) atuserzoomv;atzoomv;";
                                button -l "-" -c "floatSliderGrp -e -v (`floatSliderGrp -q -v atuserzoom`+0.01) atuserzoom;atzoom;";
    							button -l "<" -c "floatSliderGrp -e -v (`floatSliderGrp -q -v atuserzoomh`-0.01) atuserzoomh;atzoomh;";
    							button -l "v" -c "floatSliderGrp -e -v (`floatSliderGrp -q -v atuserzoomv`-0.01) atuserzoomv;atzoomv;";
    							button -l ">" -c "floatSliderGrp -e -v (`floatSliderGrp -q -v atuserzoomh`+0.01) atuserzoomh;atzoomh;";
							setParent..;
    							floatSliderGrp -w $butw -el "Z" -f 0 -v 1 -min 0.0001 -max 3 -s 0.001 -cw3 80 50 50 -cc "atzoom" atuserzoom;
    							floatSliderGrp -w $butw -el "V" -f 0 -v 0 -min -1 -max 1 -s 0.001 -cw3 80 50 50 -cc "atzoomv" atuserzoomv;
    							floatSliderGrp -w $butw -el "H" -f 0 -v 0 -min -1 -max 1 -s 0.001 -cw3 80 50 50 -cc "atzoomh" atuserzoomh;
    							button -w 240 -l "Reset" -c "atzoomreset" atuserzoomreset;
							setParent ..;
						setParent..;
					
						//Options CTL
						frameLayout -cl 1 -cll 1 -w $butw -fn "plainLabelFont" -mh 5 -l "Options" -bs "etchedOut";
							columnLayout -w $butw;
								checkBox -w $butw -l "Auto Update Tracking (For use with Autokey)" -ed 0 -v 0 -align "left" -cc "atupdate" atuserupdate;
								checkBox -w $butw -l "Thorough Tracking" -v 1 -align "left" -cc "atwork" atuserwork;
								checkBox -w $butw -l "Lock Tracking" -v 0 -align "left" atuserlock;
								rowColumnLayout -nc 5 -cw 1 80 -cw 2 5 -cw 3 20 -cw 4 135 -cw 5 10;
									checkBox -l "Attach To" -v 0 -align "left" ata2c;
									text -l "";
									button -l ">" -c "ataddcam" addcambut;
									textField -tx "Moving Camera" ata2ctx;
									text -l "";
									
								setParent..;				
							setParent..;
						setParent..;
					
						//Time CTL
						frameLayout -cl 1 -cll 1 -w $butw -fn "plainLabelFont" -mh 5 -l "Time" -bs "etchedOut";
							columnLayout -w $butw;
								checkBox -w $butw -l "Override Slider Range" -v 0 -align "left" -cc "atorange" userrange;
								checkBox -w $butw -l "Update Trail When Changed" -en 0 -v 0 -align "left" -cc "atorange" userupdaterange;
								
									rowColumnLayout -nc 4 -cal 2 "center" -cw 1 ($butw*.35) -cw 2 ($butw*.1) -cw 3 ($butw*.35) -cw 4 ($butw*.1);
										intField -v $startanim -en 0 -cc "atchange" atusermin;
										button -l "<" -c "intField -e -v (`currentTime -q`) atusermin" addstarttbut;
										intField -v $endanim -en 0 -cc "atchange" atusermax;
										button -l "<" -c "intField -e -v (`currentTime -q`) atusermax" addendtbut;
									setParent..;
							setParent..;
						setParent..;
					
						//Display CTL
						frameLayout -cl 1 -cll 1 -w $butw -fn "plainLabelFont" -mh 5 -l "Display" -bs "etchedOut";
							columnLayout -w $butw;
							    
    							checkBox -w $butw -l "Path" -v 1 -align "left" -cc "hideatpath" atuserpath;
    					        colorIndexSliderGrp -w $butw -min 1 -max 31 -v 16 -cc "colatpath" atuserpathcol;
    							checkBox -w $butw -l "Tracks" -v 1 -align "left" -cc "hideattracks" atusertracks;
								optionMenu -w 80 -h 30 -l "" attracktypeopmenu;
									menuItem -l "Curves";
									menuItem -l "Nurbs";
    							floatSliderGrp -w $butw -f 1 -pre 2 -min -0.01 -max 5.00 -v $defaulttrackscale -cc "scaleattracks" atusertrackscale;
    							colorIndexSliderGrp -w $butw -min 1 -max 31 -v 19 -cc "colattracks" atusertrackcol;
    							colorIndexSliderGrp -w $butw -min 1 -max 31 -v 17 -cc "colatkeytracks" atuserkeycol;
    							
    							separator -st "none" -h 2;
    							
    							button -w 85 -h 30 -l "Toggle Curves" -c "sgectrls";
							setParent..;
					setParent..;
					
                    //Remove evrything Buttons
						button -w $butw -h ($buth+8) -l "Remove Everything" -c "atremoveall";

						//Dock Buttons
						rowColumnLayout -nc 2 -cw 1 ($butw*0.5) -cw 2 ($butw*0.5);
							button -h ($buth-8) -l "Dock" -c "atdock";
							button -h ($buth-8) -l "UnDock" -c "atundock";
						setParent..;
					setParent..;					
					
		showWindow atuserwin; print "Result:// ArcTracker | Spencer Jones | www.spence-animator.co.uk";
		atkickstartprocatjob;
	}
	else{showWindow atuserwin; print "Result:// ArcTracker | Spencer Jones | www.spence-animator.co.uk";}
}

global proc shrinkwin (){window -e -w 220 atuserwin;}
global proc scalewin (){window -e -w 428 atuserwin;}

global proc atzoom (){
	string $viewcam = `lookThru -q`;
	float $i = `floatSliderGrp -q -v atuserzoom`;
	setAttr ($viewcam+".overscan") $i;
	print "\n";
}

global proc atzoomv (){
	string $viewcam = `lookThru -q`;
	float $i = `floatSliderGrp -q -v atuserzoomv`;
	setAttr ($viewcam+".verticalFilmOffset") $i;
}

global proc atzoomh (){
	string $viewcam = `lookThru -q`;
	float $i = `floatSliderGrp -q -v atuserzoomh`;
	setAttr ($viewcam+".horizontalFilmOffset") $i;
}

global proc atzoomreset (){
	string $viewcam = `lookThru -q`;
	setAttr ($viewcam+".overscan") 1;
	setAttr ($viewcam+".horizontalFilmOffset") 0;
	setAttr ($viewcam+".verticalFilmOffset") 0;
	floatSliderGrp -e -v 1 atuserzoom;
	floatSliderGrp -e -v 0 atuserzoomv;
	floatSliderGrp -e -v 0 atuserzoomh;
}

global proc atchange(){
	string $listedObj[] = `textScrollList -q -si atuserlist`;
	if(`size($listedObj)`<1){print "\n";}
	else{
		if(`checkBox -q -v userupdaterange`==1){
			createatpathtracks;
		}
	}
}

global proc createatpathtracks ()
	{
		global string $attrackname;
		global string $atpathdudename;
		global string $animpathname;
		global int $jobNumUpx;
		string $sel[] = `ls -sl`;
		string $listedObj[];
		float $startanim;
		float $endanim;
		int $bktime = 0;
		int $pathcol = `colorIndexSliderGrp -q -v atuserpathcol`-1;
		int $trackcol = `colorIndexSliderGrp -q -v atusertrackcol`-1;
		int $keycol = `colorIndexSliderGrp -q -v atuserkeycol`-1;
		float $trackscale = `floatSliderGrp -q -v atusertrackscale`;
		float $extrakeyscale = 1.5;
		string $animpathname;
		string $listedObj[] = `textScrollList -q -si atuserlist`;
		$attrackname = "arctracker";
		$atpathdudename = ($attrackname+"_pathdude");
		$animpathname = ($attrackname+"_pathcurve");
			
		if(`size($listedObj)`<1){error "No objects selected in ArcTracker list box";}
		else{
			
			if(`checkBox -q -v userrange`==0){$startanim = `playbackOptions -q -min`; $endanim = `playbackOptions -q -max`;}
			else{$startanim = `intField -q -v atusermin`; $endanim = `intField -q -v atusermax`;}

			if (`objExists ("*"+$attrackname+"*")`==1){delete ("*"+$attrackname+"*");}
			if (`objExists ("*:*"+$attrackname+"*")`==1){delete ("*:*"+$attrackname+"*");}
			string $pathdude[] = `spaceLocator -n ($listedObj[0]+"_"+$atpathdudename)`;

			scale -a $trackscale $trackscale $trackscale;
			hide $pathdude[0];
			string $atpointcon[] = `pointConstraint -w 1 $listedObj[0] $pathdude[0]`;
			if(`checkBox -q -v atuserwork`==1){
				bakeResults -sm 1 -sampleBy 1 -time ($startanim+":"+$endanim) -preserveOutsideKeys 1 -sparseAnimCurveBake 0 {$pathdude[0]};
				delete $atpointcon[0];
			}

			if(`checkBox -q -v ata2c`==1){$bktime = `currentTime -q`;}

			for ($i = $startanim; $i <= $endanim; $i++)
			{
				float $gettx = `getAttr -t $i ($pathdude[0]+".tx")`;	
				float $getty = `getAttr -t $i ($pathdude[0]+".ty")`;
				float $gettz = `getAttr -t $i ($pathdude[0]+".tz")`;
				int $plus1 = `keyframe -t $i -q -kc ($listedObj[0]+".tx")`;
				int $plus2 = `keyframe -t $i -q -kc ($listedObj[0]+".ty")`;
				int $plus3 = `keyframe -t $i -q -kc ($listedObj[0]+".tz")`;
				int $plus4 = $plus1 + $plus2 + $plus3;
				
				select -cl;

				if (`optionMenu -q -v attracktypeopmenu` == "Curves"){
					curve -n ($listedObj[0]+"_"+$attrackname+"_"+$i+"_inbtrack") -d 3 -p 0 0.233527 0 -p 0 0.233527 0 -p 0 0.233527 0.110086 -p 0 0.116764 0.233527 -p 0 0 0.233527 -p 0 0 0.233527 -p 0.116764 0 0.233527 -p 0.233527 0 0.116764 -p 0.233527 0 0 -p 0.233527 0 0 -p 0.233527 0.116764 0 -p 0.110086 0.233527 0 -p 0 0.233527 0 -p 0 0.233527 0 -p 0 0.233527 -0.110086 -p 0 0.116764 -0.233527 -p 0 0 -0.233527 -p 0 0 -0.233527 -p 0.116764 0 -0.233527 -p 0.233527 0 -0.116764 -p 0.233527 0 0 -p 0.233527 0 0 -p 0.233527 -0.116764 0 -p 0.110086 -0.233527 0 -p 0 -0.233527 0 -p 0 -0.233527 0 -p 0 -0.233527 -0.110086 -p 0 -0.116764 -0.233527 -p 0 0 -0.233527 -p 0 0 -0.233527 -p -0.116764 0 -0.233527 -p -0.233527 0 -0.116764 -p -0.233527 0 0 -p -0.233527 0 0 -p -0.233527 -0.116764 0 -p -0.110086 -0.233527 0 -p 0 -0.233527 0 -p 0 -0.233527 0 -p 0 -0.233527 0.110086 -p 0 -0.116764 0.233527 -p 0 0 0.233527 -p 0 0 0.233527 -p -0.116764 0 0.233527 -p -0.233527 0 0.116764 -p -0.233527 0 0 -p -0.233527 0 0 -p -0.233527 0.116764 0 -p -0.110086 0.233527 0 -p 0 0.233527 0 -p 0 0.233527 0 -k 0 -k 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 47 -k 47;		
				}
				else{
					string $atsphere[] = `sphere -r 0.2 -n ($listedObj[0]+"_"+$attrackname+"_"+$i+"_inbtrack")`;
					string $shape[] = `listRelatives -ad -s $atsphere[0]`;
					rename $shape[0] "pShereShape_1";
					select -r $atsphere[0];
				}
				string $track[] = `ls -sl`;
				move -a $gettx $getty $gettz $track[0];
			
				if(`checkBox -q -v ata2c`==1)
				{
					currentTime $i;
					$usercamera = `textField -q -tx ata2ctx`;
					parent $track[0] $usercamera;
				}

				setAttr ($track[0]+".overrideEnabled") 1;
				setAttr ($track[0]+".overrideShading") 0;
				if($plus4>0){rename $track[0] ($listedObj[0]+"_"+$attrackname+"_"+$i+"_keytrack");}
			}

			if(`checkBox -q -v ata2c`==1){currentTime $bktime;}
			if(`objExists ("*"+$attrackname+"*")`==1){select -r ("*"+$attrackname+"*");}
			if(`objExists ("*:*"+$attrackname+"*")`==1){select -r ("*:*"+$attrackname+"*");}

				if (`objExists ("*"+$attrackname+"*track*")`==1){select -r ("*"+$attrackname+"*track*");}
				if (`objExists ("*:*"+$attrackname+"*track*")`==1){select -r ("*:*"+$attrackname+"*track*");}
				string $tkarray[] = `ls -sl`;
				
				$ws = `xform -q -t -ws $tkarray[0]`;
				curve -d 1 -p $ws[0] $ws[1] $ws[2] -n ($listedObj[0]+"_"+$animpathname);
				
				string $s;
				for ($s in $tkarray)
				{
					$ws = `xform -q -t -ws $s`;
					curve -os -a -p $ws[0] $ws[1] $ws[2] ($listedObj[0]+"_"+$animpathname);
				}
				setAttr ($listedObj[0]+"_"+$animpathname+".overrideEnabled") 1;
				setAttr ($listedObj[0]+"_"+$animpathname+".overrideShading") 0;
				
				if (`objExists ("*"+$attrackname+"*")`==1){select -r ("*"+$attrackname+"*");}
				if (`objExists ("*:*"+$attrackname+"*")`==1){select -r ("*:*"+$attrackname+"*");}
				string $atgroup = `group -n ($listedObj[0]+"_"+$attrackname+"_grp")`;
				
				if(`checkBox -q -v ata2c`==1)
				{
					$usercamera = `textField -q -tx ata2ctx`;
					parent $atgroup $usercamera;
				}
				
			if(`size($sel)`>0){select -r $sel[0];}else{select -cl;}
			
		}
		scaleattracks;
		colatpath;
		colattracks;
		colatkeytracks;
		hideatpath;
		hideattracks;
		atlock;
	}


global proc scaleattracks (){
	global string $attrackname;
	global string $atpathdudename;
	global string $animpathname;
	string $listedObj[] = `textScrollList -q -si atuserlist`;
	float $i = `floatSliderGrp -q -v atusertrackscale`;
	if (`objExists ("*"+$attrackname+"*track*")`==1) scale -a $i $i $i ("*"+$attrackname+"*track*");
	if (`objExists ("*:*"+$attrackname+"*track*")`==1) scale -a $i $i $i ("*:*"+$attrackname+"*track*");
	//TEMP FIX: UI DOESNT UPDATE THE SCALE - ADDED BELOW TO FORCE A REFRESH 
	colattracks;
}

global proc colatpath (){
	global string $attrackname;
	global string $atpathdudename;
	global string $animpathname;
	string $listedObj[] = `textScrollList -q -si atuserlist`;
	int $i = (`colorIndexSliderGrp -q -v atuserpathcol`-1);			
	string $list1[] = `ls -sl`;
	if (`objExists ("*"+$attrackname+"_pathcurve*")`==1){
		select -r ("*"+$attrackname+"_pathcurve*");
		string $list2[] = `ls -sl`;
		string $obj;
		for ($obj in $list2){setAttr ($obj+".overrideColor") $i;}
	}
		if (`objExists ("*:*"+$attrackname+"_pathcurve*")`==1){
		select -r ("*:*"+$attrackname+"_pathcurve*");
		string $list2[] = `ls -sl`;
		string $obj;
		for ($obj in $list2){setAttr ($obj+".overrideColor") $i;}
	}
	select -r $list1;
}

global proc colattracks (){
	global string $attrackname;
	global string $atpathdudename;
	global string $animpathname;
	string $listedObj[] = `textScrollList -q -si atuserlist`;
	int $i = (`colorIndexSliderGrp -q -v atusertrackcol`-1);			
	string $list1[] = `ls -sl`;
	if (`objExists ("*"+$attrackname+"*inbtrack*")`==1){
		select -r ("*"+$attrackname+"*inbtrack*");
		string $list2[] = `ls -sl`;
		string $obj;
		for ($obj in $list2){setAttr ($obj+".overrideColor") $i;}
	}
		if (`objExists ("*:*"+$attrackname+"*inbtrack*")`==1){
		select -r ("*:*"+$attrackname+"*inbtrack*");
		string $list2[] = `ls -sl`;
		string $obj;
		for ($obj in $list2){setAttr ($obj+".overrideColor") $i;}
	}
	select -r $list1;
}

global proc colatkeytracks (){
	global string $attrackname;
	global string $atpathdudename;
	global string $animpathname;
	string $listedObj[] = `textScrollList -q -si atuserlist`;
	int $i = (`colorIndexSliderGrp -q -v atuserkeycol`-1);			
	string $list1[] = `ls -sl`;
	if (`objExists ("*"+$attrackname+"*keytrack*")`==1){
		select -r ("*"+$attrackname+"*keytrack*");
		string $list2[] = `ls -sl`;
		string $obj;
		for ($obj in $list2){setAttr ($obj+".overrideColor") $i;}
	}
		if (`objExists ("*:*"+$attrackname+"*keytrack*")`==1){
		select -r ("*:*"+$attrackname+"*keytrack*");
		string $list2[] = `ls -sl`;
		string $obj;
		for ($obj in $list2){setAttr ($obj+".overrideColor") $i;}
	}
	select -r $list1;
}



global proc removeatpathtracks (){
	global string $attrackname;
	global string $atpathdudename;
	global string $animpathname;
	string $listedObj[] = `textScrollList -q -si atuserlist`;
	if (`objExists ("*"+$attrackname+"*")`==1){delete ("*"+$attrackname+"*");}
	if (`objExists ("*:*"+$attrackname+"*")`==1){delete ("*:*"+$attrackname+"*");}
}

global proc atswitch (){
	checkBox -e -v 0 atuserupdate;
	atupdate;
	//checkBox -e -v 1 atuserupdate;
}

global proc atupdate(){
	global int $jobNumUpx;
	string $listedObj[] = `textScrollList -q -si atuserlist`;
	if(`size($listedObj)`<1){error "No objects selected in ArcTracker list box";}
	else{
		if(`checkBox -q -v atuserupdate`==0){
			if(`scriptJob -ex $jobNumUpx`==1){
				stopatjob;
			}
		}
		if(`checkBox -q -v atuserupdate`==1){
			if(`scriptJob -ex $jobNumUpx`==0){
				createatjob;
				createatpathtracks;
			}
		}
	}
}

global proc createatjob (){
	global int $jobNumUpx;
	string $listedObj[] = `textScrollList -q -si atuserlist`;
	if (`scriptJob -ex $jobNumUpx`==0){$jobNumUpx = `scriptJob -runOnce 0 -ac ($listedObj[0]+".translate") createatpathtracks`; print"\n";}
}

global proc stopatjob (){
	global int $jobNumUpx;
	if (`scriptJob -ex $jobNumUpx` ==1){scriptJob -kill $jobNumUpx -force; print"\n";}
}

global proc hideatpath (){
	global string $attrackname;
	global string $atpathdudename;
	global string $animpathname;
	string $listedObj[] = `textScrollList -q -si atuserlist`;
	if(`checkBox -q -v atuserpath`==0){
		if (`objExists ("*"+$animpathname+"*")`==1) hide ("*"+$animpathname+"*");
		if (`objExists ("*:*"+$animpathname+"*")`==1) hide ("*:*"+$animpathname+"*");
	}
	else{
		if (`objExists ("*"+$animpathname+"*")`==1) showHidden ("*"+$animpathname+"*");
		if (`objExists ("*:*"+$animpathname+"*")`==1) showHidden ("*:*"+$animpathname+"*");
	}
}

global proc hideattracks (){
	global string $attrackname;
	global string $atpathdudename;
	global string $animpathname;
	string $listedObj[] = `textScrollList -q -si atuserlist`;
	if(`checkBox -q -v atusertracks`==0){
		if (`objExists ("*"+$attrackname+"*track*")`==1) hide ("*"+$attrackname+"*track*");
		if (`objExists ("*:*"+$attrackname+"*track*")`==1) hide ("*:*"+$attrackname+"*track*");
	}
	else{
		if (`objExists ("*"+$attrackname+"*track*")`==1) showHidden ("*"+$attrackname+"*track*");
		if (`objExists ("*:*"+$attrackname+"*track*")`==1) showHidden ("*:*"+$attrackname+"*track*");
	}
}

global proc atkickstartproc (){
	print "\n";
}

global proc atkickstartprocatjob (){
	global int $jobNumUpx;
	int $jobNumUpx = `scriptJob -runOnce 1 -ct "SomethingSelected" atkickstartproc`;
}

global proc atorange(){
	if(`checkBox -q -v userrange`==1){intField -e -en 1 atusermin; intField -e -en 1 atusermax; checkBox -e -en 1 userupdaterange;}
	else{intField -e -en 0 atusermin; intField -e -en 0 atusermax; checkBox -e -en 0 userupdaterange;}
}

global proc atwork(){
	string $listedObj[] = `textScrollList -q -si atuserlist`;
	stopatjob;
	if(`checkBox -q -v atuserwork`==1){checkBox -e -en 0 -v 0 atuserupdate;}
	else{checkBox -e -en 1 atuserupdate;}
	if(`size($listedObj)`<1){print "\n";}
	else{if(`checkBox -q -v atuserwork`==1){createatpathtracks;}}
}

global proc atremoveall(){
	stopatjob;
	if (`objExists ("*arctracker*")`==1) delete "*arctracker*";
	if (`objExists ("*:*arctracker*")`==1) delete "*:*arctracker*";
	atundock;
	deleteUI atuserwin;
}

global proc atremovefromlist(){
	string $listedObj[] = `textScrollList -q -si atuserlist`;
	string $obj;
	for ($obj in $listedObj){
	string $obj2;
	for ($obj2 in $listedObj){if($obj2 == $obj){textScrollList -e -ri $obj2 atuserlist;}}
	}
}

global proc ataddtolist (){
	string $listedObj[] = `textScrollList -q -ai atuserlist`;
	string $selection[] = `ls -sl`;
	string $temp[];
		if(`size($selection)`<1){error "Nothing selected";}
		else{
			string $obj;
			for ($obj in $selection){
				int $n = stringArrayContains($obj, $listedObj);
				if($n==0){textScrollList -e -append $obj atuserlist;}
			}
		}
	textScrollList -e -si $selection[0] atuserlist;
}

global proc ataddcam (){
	string $obj[] = `ls -sl`;
	textField -e -tx $obj[0] ata2ctx;
}


global proc atdock (){
   if (`dockControl -ex atdockctrl` == 0){
    dockControl -area "left"
               -content atuserwin
               -label "Arc Tracker 1.0.8 2011+"
               -allowedArea "left"
               -allowedArea "right"
               -width 280 atdockctrl;
               }
}

global proc atundock (){
   if (`dockControl -ex atdockctrl` == 1){
        deleteUI -control atdockctrl;
        arctracker108;
    }
}

global proc atbonsi (){
createatpathtracks;
}

global proc atlock (){
	global string $attrackname;
	string $list1[] = `ls -sl`;
	if (`checkBox -q -v atuserlock` == 1){ 
		if (`objExists ("*"+$attrackname+"*")`==1){
			select -r ("*"+$attrackname+"*track");
			select -add ("*"+$attrackname+"*pathcurve");
			string $list2[] = `ls -sl`;
			string $obj;
			for ($obj in $list2){
				setAttr ($obj+".overrideEnabled") 1;
				setAttr ($obj+".overrideDisplayType") 1;
			}
		}
		if (`objExists ("*:*"+$attrackname+"*")`==1){
			select -r ("*:*"+$attrackname+"*track");
			select -add ("*"+$attrackname+"*pathcurve");
			string $list2[] = `ls -sl`;
			string $obj;
			for ($obj in $list2){
				setAttr ($obj+".overrideEnabled") 1;
				setAttr ($obj+".overrideDisplayType") 1;
			}
		}
	}
	select -r $list1;
}